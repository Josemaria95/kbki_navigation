#!/usr/bin/env python
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from sensor_msgs.msg import LaserScan
from kbki_tesis.msg import servoAng, Obst, threemap
import rospy
import rospkg


class Map3D(object):

	def __init__ (self):

		rospy.Subscriber('/scan_3d', threemap, self.readMAP)
		self.x = None
		self.y = None
		self.servo_angle = 0.0

	def readMAP(self, data):

		self.x = np.array(data.x)
		#self.x = [data.x]
		#print("x: ", self.x)
		self.y = np.array(data.y)
		#self.y = [data.y]
		#print("y: ", self.y)
		self.servo_angle = np.deg2rad(data.angle)
		#print("angle: ", self.servo_angle)

	def matrixRotation(self):

		if not self.x is None:
			if not self.y is None:
				A = self.x * np.cos(self.servo_angle)
				A = A.reshape(1,len(A))
				B = self.y
				B = B.reshape(1,len(B))
				C = -self.x * np.sin(self.servo_angle)
				C = C.reshape(1,len(C))

				matrix_map_1 =np.concatenate((A,B))
				matrix_map =np.concatenate((matrix_map_1,C))

				#matrix_map = np.concatenate((self.x * np.cos(self.servo_angle)), (self.y), (-self.x * np.sin(self.servo_angle))
				#print ("3D: ", matrix_map)
				print("tamano: ", np.shape(matrix_map))

				#Mrotation.write(str(matrix_map[0]) + " " + str(matrix_map[1]) + " " + str(matrix_map[2]) +  "\n")
				MrotationX.write(str(matrix_map[0]))
				MrotationY.write(str(matrix_map[1]))
				MrotationZ.write(str(matrix_map[2]))


				return matrix_map
		return None
# Logs
rospack = rospkg.RosPack()
folder = rospack.get_path('kbki_tesis')
#Mrotation = open(folder + "/logs/map3D_1.txt",'w')

MrotationX = open(folder + "/logs/map3D_X.txt",'w')
MrotationY = open(folder + "/logs/map3D_Y.txt",'w')
MrotationZ = open(folder + "/logs/map3D_Z.txt",'w')


rospy.init_node("mapeoen3D",anonymous=True)

map3D = Map3D()
# Rate Frequency
freq = 5     # Frecuencia (Hz)
T    = 1.0/freq # Periodo
rate = rospy.Rate(freq)

plt.show()

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
X_data = np.empty((0))
Y_data = np.empty((0))
Z_data = np.empty((0))
"""


axes = plt.gca()
axes.set_xlim(-10, 10)
axes.set_ylim(-10, +10)
line, = axes.plot(X_data, Y_data, 'r-')

"""


while not rospy.is_shutdown():

	mapita = map3D.matrixRotation()
	print("error 1")
	X_data=np.append(X_data,mapita[0])
	print("error 2")
	Y_data=np.append(Y_data,mapita[1])
	print("error 3")
	Z_data=np.append(Z_data,mapita[2])
	print("1")
	#line.set_xdata(X_data)
	#line.set_ydata(Y_data)
	#print('Y:::::::',Y_data)

	plt.draw()
	plt.pause(0.01)
	ax.scatter(X_data,Y_data,Z_data,marker=".")

	print("3")
	#print(mapita)
	rate.sleep()


MrotationX.close()
MrotationY.close()
MrotationZ.close()

rospy.spin()

